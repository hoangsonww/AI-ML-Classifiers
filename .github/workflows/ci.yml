name: CI/CD Pipeline for AI/ML Classifiers

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  formatting:
    name: "üîß Formatting & Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        continue-on-error: true

      - name: Install dependencies
        run: npm ci
        continue-on-error: true

      - name: Prettier format
        run: npm run format
        continue-on-error: true

      - name: ESLint lint
        run: npm run lint
        continue-on-error: true

  backend:
    name: "‚úÖ Backend Build & Test"
    runs-on: ubuntu-latest
    needs: [formatting]
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        continue-on-error: true

      - name: Install backend deps
        run: npm --workspace backend ci
        continue-on-error: true

      - name: Backend format
        run: npm --workspace backend run format
        continue-on-error: true

      - name: Backend lint
        run: npm --workspace backend run lint
        continue-on-error: true

      - name: Build backend
        run: npm --workspace backend run build
        continue-on-error: true

      - name: Backend tests
        run: npm --workspace backend run test
        continue-on-error: true

  frontend:
    name: "üåê Frontend Build & Test"
    runs-on: ubuntu-latest
    needs: [backend]
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        continue-on-error: true

      - name: Install frontend deps
        run: npm --workspace frontend ci
        continue-on-error: true

      - name: Frontend format
        run: npm --workspace frontend run format
        continue-on-error: true

      - name: Frontend lint
        run: npm --workspace frontend run lint
        continue-on-error: true

      - name: Build frontend
        run: npm --workspace frontend run build
        continue-on-error: true

      - name: Frontend tests
        run: npm --workspace frontend run test:unit
        continue-on-error: true

  complete:
    name: "üéâ Pipeline Complete"
    runs-on: ubuntu-latest
    needs: [formatting, backend, frontend]
    if: ${{ always() }}
    steps:
      - name: Final status
        run: echo "‚úÖ CI/CD pipeline finished successfully."
